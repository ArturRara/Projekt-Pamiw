{"ast":null,"code":"import _slicedToArray from \"D:\\\\projekty\\\\ReactApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projekty\\\\ReactApp\\\\src\\\\components\\\\upload.js\";\nimport React, { Component, useState } from 'react'; //import {FilePond, registerPlugin} from 'react-filepond'\n//import 'filepond/dist/filepond.min.css'\n\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css'; // Register the plugins\n//registerPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview)\n\nclass upload extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const user = {};\n  }\n\n  render() {\n    const _useState = useState([]),\n          _useState2 = _slicedToArray(_useState, 2),\n          files = _useState2[0],\n          setFiles = _useState2[1];\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"files=\", files, \"allowMultiple=\", true, \"onupdatefiles=\", setFiles, \"labelIdle='Drag & Drop your files or \", React.createElement(\"span\", {\n      class: \"filepond--label-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Browse\"), \"'\");\n  }\n\n}\n\nexport default upload;","map":{"version":3,"sources":["D:/projekty/ReactApp/src/components/upload.js"],"names":["React","Component","useState","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","upload","constructor","state","errors","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","user","render","files","setFiles"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC,C,CACA;AACA;;AAEA,OAAOC,kCAAP,MAA+C,wCAA/C;AACA,OAAOC,0BAAP,MAAuC,+BAAvC;AACA,OAAO,sEAAP,C,CAGA;AACA;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC3BK,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAI;AACR,SAAKC,QAAL,CAAc;AAAC,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,KAAd;AACH;;AAEDL,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACRA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAMC,IAAI,GAAG,EAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,sBACqBjB,QAAQ,CAAC,EAAD,CAD7B;AAAA;AAAA,UACEkB,KADF;AAAA,UACSC,QADT;;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEeD,KAFf,oBAGuB,IAHvB,oBAIuBC,QAJvB,2CAK6C;AAAM,MAAA,KAAK,EAAC,wBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAL7C,MADJ;AAUH;;AAjC0B;;AAqC/B,eAAehB,MAAf","sourcesContent":["import React, {Component,useState} from 'react'\r\n//import {FilePond, registerPlugin} from 'react-filepond'\r\n//import 'filepond/dist/filepond.min.css'\r\n\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation'\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css'\r\n\r\n\r\n// Register the plugins\r\n//registerPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview)\r\n\r\nclass upload extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const user = {}\r\n    }\r\n\r\n    render() {\r\n        const [files, setFiles] = useState([])\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                    files={files}\r\n                    allowMultiple={true}\r\n                    onupdatefiles={setFiles}\r\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default upload"]},"metadata":{},"sourceType":"module"}